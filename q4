/*
3. Let A be an array of n integers a0,a1,... ,an-1 (negative integers 
are allowed), denoted, by A[i... j], the sub-array ai, ai+1,... ,aj 
for i≤j. Also let Si-j denote the sum ai + ai+1 +· · · + aj. WAP
by using an udf that must run in O(n2) time to find out the maximum 
value of Si-j for all the pair i, j with 0 ≤ i ≤ j ≤ n-1. empty 
sub-array will have sum Si-j = 0. Indeed, if all the elements of A 
are negative, then one returns 0 as the maximum sub-array sum.
*/

#include <stdio.h>
#include <stdlib.h>

int maxSubarray(int *arr,int n)
{
    int max=0;
    for(int i=0;i<n;i++)
    {
        int sum=0;
        for(int j=i;j<n;j++)
        {
            sum+=arr[j];
            if(sum>max)
                max=sum;
        }
    }
    return max;
}

int main()
{
    int n;
    printf("Enter n: ");
    scanf("%d",&n);

    int *arr=(int*)malloc(n*sizeof(int));
    printf("Enter array elements: ");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);   
    }
    
    int answer=maxSubarray(arr,n);
    printf("\nMax Subarray sum is %d\n",answer);
    
    return 0;
}
